# Workflow Apiserver is an optional component that allows users to query the workflows API through the Fission apiserver.
{{ if .Values.apiserver }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: workflows-apiserver
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        svc: workflows-apiserver
    spec:
      containers:
      - image: jaegertracing/jaeger-agent
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        args: ["--collector.host-port={{ .Values.jaeger.collector }}"]
      - name: workflows-apiserver
        image: "{{ .Values.bundleImage }}:{{.Values.tag}}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        command: ["/fission-workflows-bundle"]
        args: [
        # Only run components related to accessing the API
          "--nats",
          "--api-http",
          "--api-workflow-invocation",
          "--api-workflow",
          "--api-admin",
          "--metrics",
          {{- if .Values.debug }}
          "--debug",
          {{- end }}
        ]
        env:
        - name: ES_NATS_URL
          value: "nats://{{ .Values.nats.authToken }}@{{ .Values.nats.location }}.{{ .Values.fnenv.fission.ns }}:{{ .Values.nats.port }}"
        - name: ES_NATS_CLUSTER
          value: "{{ .Values.nats.cluster }}"
        - name: FNENV_FISSION_EXECUTOR
          value: "{{ .Values.fnenv.fission.executor }}.{{ .Values.fnenv.fission.ns }}"
        - name: FNENV_FISSION_CONTROLLER
          value: "{{ .Values.fnenv.fission.controller }}.{{ .Values.fnenv.fission.ns }}"
        readinessProbe:
          httpGet:
            path: "/healthz"
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 1
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: "/healthz"
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
---
# TODO remove this service once all functionality is accessible through Fission
apiVersion: v1
kind: Service
metadata:
  name: workflows-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    svc: workflows-apiserver
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    svc: workflows-apiserver
---
{{ end }}
# Workflow Engine is deployed as just another Fission environment.
apiVersion: fission.io/v1
kind: Environment
metadata:
  name: {{ .Values.env.name }}
  namespace: default
spec:
  version: 2
  TerminationGracePeriod: {{ .Values.gracePeriod }}
  runtime:
    image: "{{ .Values.envImage }}:{{.Values.tag}}"
    container:
      command: ["/fission-workflows-bundle"]
      args: [
      # Override workflow env CMD to optionally enable --debug
        "--nats",
        "--fission",
        "--internal",
        "--controller",
        "--api-http",
        "--api-workflow-invocation",
        "--api-workflow",
        "--api-admin",
        "--metrics",
        {{- if .Values.debug }}
        "--debug",
        {{- end }}
      ]
      env:
      - name: ES_NATS_URL
        value: "nats://{{ .Values.nats.authToken }}@{{ .Values.nats.location }}.{{ .Values.fnenv.fission.ns }}:{{ .Values.nats.port }}"
      - name: ES_NATS_CLUSTER
        value: "{{ .Values.nats.cluster }}"
      - name: FNENV_FISSION_CONTROLLER
        value: "{{ .Values.fnenv.fission.controller }}.{{ .Values.fnenv.fission.ns }}"
      - name: FNENV_FISSION_EXECUTOR
        value: "{{ .Values.fnenv.fission.executor }}.{{ .Values.fnenv.fission.ns }}"
  builder:
    image: "{{ .Values.buildEnvImage }}:{{.Values.tag}}"
    command: "defaultBuild"
  allowedFunctionsPerContainer: infinite
